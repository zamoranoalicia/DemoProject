version: '3.8'

services:
#  zookeeper:
#    image: wurstmeister/zookeeper
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
  kafka:
#    image: wurstmeister/kafka
    image: landoop/fast-data-dev:latest
    container_name: kafka
    ports:
      - "3181:3181"
      - "3040:3040"
      - "7082:7082"
      - "7083:7083"
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
#      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "my-topic:1:1"
      BROKER_PORT: 9092
      REST_PORT: 7082
      CONNECT_PORT: 7083
      ZK_PORT: 2181
      WEB_PORT: 3040
      REGISTRY_PORT: 8081
    restart: always
#    depends_on:
#      - zookeeper
#  kafka-ui:
#    image: provectuslabs/kafka-ui:latest
#    ports:
#      - "8090:8080"
#    environment:
#      KAFKA_CLUSTERS_0_NAME: local
#      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
#      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
#    depends_on:
#      - kafka

  spring-boot-app:
    build: .
    container_name: spring-boot-app
    ports:
      - "8080:8080"
    depends_on:
      - kafka

